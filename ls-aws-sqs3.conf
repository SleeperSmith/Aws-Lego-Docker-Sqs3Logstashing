input {
	s3 {
		queue_name => "{{sqs-name}}"
		region => "{{aws-region}}"
		temporary_directory => "/home/local/temp"
	}
}

filter {
	fingerprint {
		key => "3fj8q9h4j8qu9frh9w8aejf98w34fhq79hnaqf"
		method => "SHA1"
		target => "event_unique_id"
	}

	if [s3_bucket] == "{{raw-log-bucket}}" {
		if [s3_key] =~ "^AWSLogs\/.*\/elasticloadbalancing\/" {
			grok {
				match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:loadbalancer} %{IP:client_ip}:%{NUMBER:client_port:int} %{IP:backend_ip}:%{NUMBER:backend_port:int} %{NUMBER:request_processing_time:float} %{NUMBER:backend_processing_time:float} %{NUMBER:response_processing_time:float} %{NUMBER:elb_status_code:int} %{NUMBER:backend_status_code:int} %{NUMBER:received_bytes:int} %{NUMBER:sent_bytes:int} %{QS:request}" ]
				remove_field => "message"
				add_field => ["index_name", "elb"]
			}
			grok {
				match => ["request", "%{WORD:verb} %{NOTSPACE:protocol}://%{NOTSPACE:host}:%{NUMBER:host_port}%{NOTSPACE:url_path} HTTP/%{NUMBER:httpversion}"]
			}
			date {
				match => [ "timestamp", "ISO8601" ]
				remove_field => "timestamp"
			}
		}
	}

	if [s3_bucket] == "{{access-log-bucket}}" {
		if [s3_key] =~ "^{{s3-access-log-prefix}}" {
			grok {
				match => ["message", "%{S3_ACCESS_LOG}"]
				remove_field => "message"
				add_field => ["index_name", "{{s3-access-log-prefix}}"]
			}
			date {
				match => ["timestamp", "d/MMM/YYYY:HH:mm:ss Z"]
				remove_field => "timestamp"
			}
		}
		if [s3_key] =~ "^{{cf-access-log-prefix}}" {
			#mutate {
			#	add_field => ["index_name", "{{cf-access-log-prefix}}"]
			#}
		}
	}
	
	mutate {
		remove_field => "s3_key"
		remove_field => "s3_bucket"
	}
}

output {
	if [index_name] and [event_unique_id] {
		elasticsearch {
			hosts => ["{{es-host}}"]
			index => "logstash-%{[index_name]}-%{+YYYY.MM.dd}"
			document_id => '%{[event_unique_id]}'
		}
	}
}
